{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16040\viewh19580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Environment Variables\

\f1\b0\fs24 1. At the moment our API key is sitting in our code\
2. This is not the safest place to store this sensitive data. If someone gets access to our code or our server they will get our API key\
3. A better way to do this is to have what we call an environment variable\
4. This allows us to set the variable on the system/server not in the code.\
5. This helps to keep the sensitive information safe.\
6. This same principle applies for all sensitive data such as usernames and passwords your app may need.\
7. We are going to do this using a node package called dotenv\
8. {\field{\*\fldinst{HYPERLINK "https://www.npmjs.com/package/dotenv"}}{\fldrslt 
\f2 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://www.npmjs.com/package/dotenv}}\
9. In terminal: npm I dotenv \
10. Dotenv is a zero-dependency module that loads environment variables from an .env file into process.env\
11. Open: index.js\
}